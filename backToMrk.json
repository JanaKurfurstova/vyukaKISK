[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "=001",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "TMP",
    "columnInsertIndex": 1,
    "description": "Create column TMP at index 1 based on column =001 using expression grel:value"
  },
  {
    "op": "core/column-move",
    "columnName": "=000",
    "index": 0,
    "description": "Move column =000 to position 0"
  },
  {
    "op": "core/column-move",
    "columnName": "TMP",
    "index": 0,
    "description": "Move column TMP to position 0"
  },
  {
    "op": "core/transpose-columns-into-rows",
    "startColumnName": "TMP",
    "columnCount": -1,
    "ignoreBlankCells": true,
    "fillDown": false,
    "separator": null,
    "keyColumnName": "key",
    "valueColumnName": "value",
    "description": "Transpose cells in columns starting with TMP into rows in two new columns named key and value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "key",
          "expression": "value",
          "columnName": "key",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "TMP",
                "l": "TMP"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "value",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "id",
    "columnInsertIndex": 2,
    "description": "Create column id at index 2 based on column value using expression grel:value"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "description": "Fill down cells in column id"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "grel:value+cells[\"key\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression grel:value+cells[\"key\"].value"
  },
  {
    "op": "core/row-reorder",
    "mode": "row-based",
    "sorting": {
      "criteria": [
        {
          "valueType": "string",
          "column": "id",
          "blankPosition": 2,
          "errorPosition": 1,
          "reverse": false,
          "caseSensitive": false
        }
      ]
    },
    "description": "Reorder rows"
  },
  {
    "op": "core/column-removal",
    "columnName": "id",
    "description": "Remove column id"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "key",
          "expression": "value",
          "columnName": "key",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "TMP",
                "l": "TMP"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "value",
    "expression": "grel:null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column value using expression grel:null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "key",
          "expression": "value",
          "columnName": "key",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "TMP",
                "l": "TMP"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "key",
    "expression": "grel:null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column key using expression grel:null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "key",
    "expression": "grel:replace(value,\"000\",\"LDR\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column key using expression grel:replace(value,\"000\",\"LDR\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "key",
    "expression": "join ([coalesce(cells['key'].value,''),coalesce(cells['value'].value,'')],'  ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column key using expression join ([coalesce(cells['key'].value,''),coalesce(cells['value'].value,'')],'  ')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "key"
    ],
    "description": "Reorder columns"
  }
]
